@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

[data-theme="dark"] {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

/* Suppress hydration warnings from browser extensions */
body[data-new-gr-c-s-check-loaded],
body[data-gr-ext-installed],
html[data-new-gr-c-s-check-loaded],
html[data-gr-ext-installed] {
  /* These attributes are added by browser extensions like Grammarly */
  /* and should not cause hydration mismatches */
}

/* Additional browser extension attributes */
*[data-new-gr-c-s-check-loaded],
*[data-gr-ext-installed],
*[data-grammarly-shadow-root] {
  /* Suppress warnings for all Grammarly-related attributes */
}

/* Suppress console warnings from browser extensions */
@media screen and (prefers-reduced-motion: no-preference) {
  /* This rule helps with browser extension detection */
}

/* Hide browser extension warnings in development */
body[data-new-gr-c-s-check-loaded]::before,
body[data-gr-ext-installed]::before {
  content: '';
  display: none;
}

a {
  color: inherit;
  text-decoration: none;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 4px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 2px;
}

.dark ::-webkit-scrollbar-thumb {
  background: #475569;
}

/* Mobile optimizations */
@media (max-width: 640px) {
  /* Reduce motion for better performance on mobile */
  *, *::before, *::after {
    animation-duration: 0.2s !important;
    animation-delay: 0s !important;
    transition-duration: 0.2s !important;
  }

  /* Better touch targets */
  button, [role="button"] {
    min-height: 44px;
    min-width: 44px;
  }

  /* Improve readability on small screens */
  body {
    font-size: 16px;
    line-height: 1.5;
  }

  /* Better text selection on mobile */
  .story-editor {
    -webkit-user-select: text;
    user-select: text;
    -webkit-touch-callout: default;
  }
}

/* Story editor styles */
.story-editor {
  @apply min-h-screen p-4 focus:outline-none;
  font-family: 'Inter', system-ui, sans-serif;
  line-height: 1.8;
  letter-spacing: 0.01em;
}

.story-editor:focus {
  @apply outline-none;
}

.story-editor p {
  @apply mb-4;
}

.story-editor h1 {
  @apply text-3xl font-bold mb-6 text-gray-900 dark:text-gray-100;
}

.story-editor h2 {
  @apply text-2xl font-semibold mb-4 text-gray-800 dark:text-gray-200;
}

.story-editor h3 {
  @apply text-xl font-medium mb-3 text-gray-700 dark:text-gray-300;
}

/* Live cursor styles */
.live-cursor {
  @apply absolute pointer-events-none z-50;
  transition: all 0.1s ease-out;
}

.live-cursor::after {
  content: '';
  @apply absolute w-0.5 h-6 bg-current animate-pulse;
}

.live-cursor-label {
  @apply absolute -top-6 left-0 px-2 py-1 text-xs text-white rounded-md whitespace-nowrap;
  font-size: 11px;
}

/* Typing indicator */
.typing-indicator {
  @apply flex items-center space-x-1;
}

.typing-dot {
  @apply w-1.5 h-1.5 bg-current rounded-full animate-pulse;
  animation: typing 1.4s infinite ease-in-out both;
}

.typing-dot:nth-child(1) { animation-delay: -0.32s; }
.typing-dot:nth-child(2) { animation-delay: -0.16s; }

@keyframes typing {
  0%, 80%, 100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}

/* Toast styles */
.toast-success {
  @apply bg-green-500 text-white;
}

.toast-error {
  @apply bg-red-500 text-white;
}

.toast-loading {
  @apply bg-blue-500 text-white;
}

/* Fade in animation */
.fade-in {
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}
